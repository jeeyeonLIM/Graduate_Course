#1
ggplot(data = trial_A, aes(SCORE))+geom_histogram()
boxplot(trial_A$SCORE,horizontal = TRUE , main = "TRT A _ SCORE")
ggplot(aes(y = SCORE, x = TRT), data = trial) + geom_boxplot()
t.test(trial_A$SCORE,mu = 20 ,alternative ="less")
View(dog_gather)
ggplot(dog_gather, aes(y=heartbeat, x= CO2)) + geom_boxplot(stat = "boxplot")
tempdata =
ggplot(dog_gather, aes(y=heartbeat, x= trt)) + geom_boxplot(stat = "boxplot")
tempdata =
ggplot(dog_gather, aes(y=heartbeat, x= trt)) + geom_boxplot(stat = "boxplot")
ggplot(dog_gather, aes(y=heartbeat, x= trt)) + geom_boxplot(stat = "boxplot")
View(dog)
View(dog_gather)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(dplyr)
library(MASS)
QQ_Plot_fun <- function(data, var){
n <- length(var)
data = data %>% mutate(u = rank(var)/(1+n),
qnorm = qnorm(u), qlogistic = log(u/(1-u)),qlaplace = qlaplace(u),
qt1 = qt(u,1),qt2 = qt(u,2),qt3 = qt(u,3),qt4 = qt(u,4),qt5 = qt(u,5),
qt6 = qt(u,6),qt7 = qt(u,7),qt8 = qt(u,8),qt9 = qt(u,9),qt10 = qt(u,10))
g1 <- ggplot(data, aes(x = var, y = qnorm)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Normal", "R^2 = ",
round(summary(lm(qnorm ~ var, data))$adj.r.squared,4)*100 ,"%", sep=" "))
g2 <- ggplot(data, aes(x = var, y = qlogistic)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Logistic", "R^2 = ",
round(summary(lm(qlogistic ~ var, data))$adj.r.squared,4)*100 ,"%", sep=" "))
g3 <- ggplot(data, aes(x = var, y = qlaplace)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Laplace", "R^2 = ",
round(summary(lm(qlaplace ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t1 <- ggplot(data, aes(x = var, y = qt1)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(1)", "R^2 = ",
round(summary(lm(qt1 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t2 <- ggplot(data, aes(x = var, y = qt2)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(2)", "R^2 = ",
round(summary(lm(qt2 ~ var, data))$adj.r.squared,4)*100, sep=" "))
t3 <- ggplot(data, aes(x = var, y = qt3)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(3)", "R^2 = ",
round(summary(lm(qt3 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t4 <- ggplot(data, aes(x = var, y = qt4)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(4)", "R^2 = ",
round(summary(lm(qt4 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t5 <- ggplot(data, aes(x = var, y = qt5)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(5)", "R^2 = ",
round(summary(lm(qt5 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t6 <- ggplot(data, aes(x = var, y = qt6)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(6)", "R^2 = ",
round(summary(lm(qt6 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t7 <- ggplot(data, aes(x = var, y = qt7)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(7)", "R^2 = ",
round(summary(lm(qt7 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t8 <- ggplot(data, aes(x = var, y = qt8)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(8)", "R^2 = ",
round(summary(lm(qt8 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t9 <- ggplot(data, aes(x = var, y = qt9)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(9)", "R^2 = ",
round(summary(lm(qt9 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t10 <- ggplot(data, aes(x = var, y = qt10)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(10)", "R^2 = ",
round(summary(lm(qt10 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
grid.arrange(g1,g2,g3,ncol = 3)
grid.arrange(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10, nrow = 2, ncol=5)
}
hd = read.csv("C:/Users/jeeyeon/Desktop/data/hyundai.csv", header = T, stringsAsFactor = F)
hd = hd[,c(1,2,3)];  colnames(hd) = c("date", "hd_lower","hd_upper")
hd = hd %>% transmute(date = date, P1 = (as.numeric(gsub(",", "", hd_lower))+ as.numeric(gsub(",", "", hd_upper)))/2)
kt = read.csv("C:/Users/jeeyeon/Desktop/data/kt.csv", header = T, stringsAsFactor = F)
kt <- kt[,c(1,2,3)]; colnames(kt) = c("date", "kt_lower", "kt_upper")
kt = kt %>% transmute(date = date, P2 = (as.numeric(gsub(",", "", kt_lower))+ as.numeric(gsub(",", "", kt_upper)))/2)
total = hd %>% left_join(kt, by = "date") %>%
transmute(date = as.numeric(gsub("/", "", date)), P1 = P1, P2 = P2 )  %>%
mutate(r1 = (P1-lag(P1))/lag(P1), r2 = (P2-lag(P2))/lag(P2), year = substr(date, 1, 4))
total <- total[complete.cases(total), ];  n <- length(total$date)
total <- total[c(order(total$date)),]
total <- total %>% mutate(t = c(0:(n-1)))
### 1 ----------------------------------------------------------------------------------------------------------
t1 <- ggplot(total) + geom_line(aes(x = t, y = P1), colour = "darkblue", size = 1 )+ggtitle("Hyundai Time Series")
t2 <- ggplot(total) + geom_line(aes(x = t, y = P2), colour = "pink", size = 1 )+ggtitle("KT&G Time Series")
grid.arrange(t1,t2, ncol= 2)
t1 <- ggplot(total) + geom_line(aes(x = t, y = log(P1)), colour = "darkblue", size = 1 )+ggtitle("log: Hyundai Time Series")
t2 <- ggplot(total) + geom_line(aes(x = t, y = log(P2)), colour = "pink", size = 1 )+ggtitle("log: KT&G Time Series")
grid.arrange(t1,t2, ncol= 2)
t1 <- ggplot(total) + geom_line(aes(x = t, y = P1), colour = "darkblue", size = 1 ) +
geom_line(aes(x = t, y = P2), colour = "pink", size = 1) +ggtitle("Pt graph")
t2 <- ggplot(total) + geom_line(aes(x = t, y = log(P1)), colour = "darkblue", size = 1 ) +
geom_line(aes(x = t, y = log(P2)), colour = "pink", size = 1)+ggtitle("log(Pt) graph")
grid.arrange(t1,t2, ncol=2)
QQ_Plot_fun(total, total$r1)
QQ_Plot_fun(total, total$r2)
acf(total$r1)# 독립이아니다
fit <- lm(r1 ~ t, total); durbinWatsonTest(fit)
acf(total$r2)# 독립이아니다
fit <- lm(r2 ~ t, total); durbinWatsonTest(fit)
QQ_Plot_fun <- function(data, var){
n <- length(var)
data = data %>% mutate(u = rank(var)/(1+n),
qnorm = qnorm(u), qlogistic = log(u/(1-u)),qlaplace = qlaplace(u),
qt1 = qt(u,1),qt2 = qt(u,2),qt3 = qt(u,3),qt4 = qt(u,4),qt5 = qt(u,5),
qt6 = qt(u,6),qt7 = qt(u,7),qt8 = qt(u,8),qt9 = qt(u,9),qt10 = qt(u,10))
g1 <- ggplot(data, aes(x = var, y = qnorm)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Normal", "R^2 = ",
round(summary(lm(qnorm ~ var, data))$adj.r.squared,4)*100 ,"%", sep=" "))
g2 <- ggplot(data, aes(x = var, y = qlogistic)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Logistic", "R^2 = ",
round(summary(lm(qlogistic ~ var, data))$adj.r.squared,4)*100 ,"%", sep=" "))
g3 <- ggplot(data, aes(x = var, y = qlaplace)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Laplace", "R^2 = ",
round(summary(lm(qlaplace ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t1 <- ggplot(data, aes(x = var, y = qt1)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(1)", "R^2 = ",
round(summary(lm(qt1 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t2 <- ggplot(data, aes(x = var, y = qt2)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(2)", "R^2 = ",
round(summary(lm(qt2 ~ var, data))$adj.r.squared,4)*100, sep=" "))
t3 <- ggplot(data, aes(x = var, y = qt3)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(3)", "R^2 = ",
round(summary(lm(qt3 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t4 <- ggplot(data, aes(x = var, y = qt4)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(4)", "R^2 = ",
round(summary(lm(qt4 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t5 <- ggplot(data, aes(x = var, y = qt5)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(5)", "R^2 = ",
round(summary(lm(qt5 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t6 <- ggplot(data, aes(x = var, y = qt6)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(6)", "R^2 = ",
round(summary(lm(qt6 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t7 <- ggplot(data, aes(x = var, y = qt7)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(7)", "R^2 = ",
round(summary(lm(qt7 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t8 <- ggplot(data, aes(x = var, y = qt8)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(8)", "R^2 = ",
round(summary(lm(qt8 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t9 <- ggplot(data, aes(x = var, y = qt9)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(9)", "R^2 = ",
round(summary(lm(qt9 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t10 <- ggplot(data, aes(x = var, y = qt10)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(10)", "R^2 = ",
round(summary(lm(qt10 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
grid.arrange(g1,g2,g3,ncol = 3)
grid.arrange(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10, nrow = 2, ncol=5)
}
QQ_Plot_fun(total, total$r1)
library(jmuOutlier)
library(ggpmisc)
library(car)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(dplyr)
library(MASS)
library(jmuOutlier)
library(ggpmisc)
library(car)
QQ_Plot_fun <- function(data, var){
n <- length(var)
data = data %>% mutate(u = rank(var)/(1+n),
qnorm = qnorm(u), qlogistic = log(u/(1-u)),qlaplace = qlaplace(u),
qt1 = qt(u,1),qt2 = qt(u,2),qt3 = qt(u,3),qt4 = qt(u,4),qt5 = qt(u,5),
qt6 = qt(u,6),qt7 = qt(u,7),qt8 = qt(u,8),qt9 = qt(u,9),qt10 = qt(u,10))
g1 <- ggplot(data, aes(x = var, y = qnorm)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Normal", "R^2 = ",
round(summary(lm(qnorm ~ var, data))$adj.r.squared,4)*100 ,"%", sep=" "))
g2 <- ggplot(data, aes(x = var, y = qlogistic)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Logistic", "R^2 = ",
round(summary(lm(qlogistic ~ var, data))$adj.r.squared,4)*100 ,"%", sep=" "))
g3 <- ggplot(data, aes(x = var, y = qlaplace)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("Laplace", "R^2 = ",
round(summary(lm(qlaplace ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t1 <- ggplot(data, aes(x = var, y = qt1)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(1)", "R^2 = ",
round(summary(lm(qt1 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t2 <- ggplot(data, aes(x = var, y = qt2)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(2)", "R^2 = ",
round(summary(lm(qt2 ~ var, data))$adj.r.squared,4)*100, sep=" "))
t3 <- ggplot(data, aes(x = var, y = qt3)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(3)", "R^2 = ",
round(summary(lm(qt3 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t4 <- ggplot(data, aes(x = var, y = qt4)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(4)", "R^2 = ",
round(summary(lm(qt4 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t5 <- ggplot(data, aes(x = var, y = qt5)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(5)", "R^2 = ",
round(summary(lm(qt5 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t6 <- ggplot(data, aes(x = var, y = qt6)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(6)", "R^2 = ",
round(summary(lm(qt6 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t7 <- ggplot(data, aes(x = var, y = qt7)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(7)", "R^2 = ",
round(summary(lm(qt7 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t8 <- ggplot(data, aes(x = var, y = qt8)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(8)", "R^2 = ",
round(summary(lm(qt8 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t9 <- ggplot(data, aes(x = var, y = qt9)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(9)", "R^2 = ",
round(summary(lm(qt9 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
t10 <- ggplot(data, aes(x = var, y = qt10)) + geom_point() +geom_smooth(method="lm",se=F)+
ggtitle(paste("t(10)", "R^2 = ",
round(summary(lm(qt10 ~ var, data))$adj.r.squared,4)*100 , sep=" "))
grid.arrange(g1,g2,g3,ncol = 3)
grid.arrange(t1,t2,t3,t4,t5,t6,t7,t8,t9,t10, nrow = 2, ncol=5)
}
hd = read.csv("C:/Users/jeeyeon/Desktop/data/hyundai.csv", header = T, stringsAsFactor = F)
hd = hd[,c(1,2,3)];  colnames(hd) = c("date", "hd_lower","hd_upper")
hd = hd %>% transmute(date = date, P1 = (as.numeric(gsub(",", "", hd_lower))+ as.numeric(gsub(",", "", hd_upper)))/2)
kt = read.csv("C:/Users/jeeyeon/Desktop/data/kt.csv", header = T, stringsAsFactor = F)
kt <- kt[,c(1,2,3)]; colnames(kt) = c("date", "kt_lower", "kt_upper")
kt = kt %>% transmute(date = date, P2 = (as.numeric(gsub(",", "", kt_lower))+ as.numeric(gsub(",", "", kt_upper)))/2)
total = hd %>% left_join(kt, by = "date") %>%
transmute(date = as.numeric(gsub("/", "", date)), P1 = P1, P2 = P2 )  %>%
mutate(r1 = (P1-lag(P1))/lag(P1), r2 = (P2-lag(P2))/lag(P2), year = substr(date, 1, 4))
total <- total[complete.cases(total), ];  n <- length(total$date)
total <- total[c(order(total$date)),]
total <- total %>% mutate(t = c(0:(n-1)))
t1 <- ggplot(total) + geom_line(aes(x = t, y = P1), colour = "darkblue", size = 1 )+ggtitle("Hyundai Time Series")
t2 <- ggplot(total) + geom_line(aes(x = t, y = P2), colour = "pink", size = 1 )+ggtitle("KT&G Time Series")
grid.arrange(t1,t2, ncol= 2)
t1 <- ggplot(total) + geom_line(aes(x = t, y = log(P1)), colour = "darkblue", size = 1 )+ggtitle("log: Hyundai Time Series")
t2 <- ggplot(total) + geom_line(aes(x = t, y = log(P2)), colour = "pink", size = 1 )+ggtitle("log: KT&G Time Series")
grid.arrange(t1,t2, ncol= 2)
t1 <- ggplot(total) + geom_line(aes(x = t, y = P1), colour = "darkblue", size = 1 ) +
geom_line(aes(x = t, y = P2), colour = "pink", size = 1) +ggtitle("Pt graph")
grid.arrange(t1,t2, ncol=2)
t2 <- ggplot(total) + geom_line(aes(x = t, y = log(P1)), colour = "darkblue", size = 1 ) +
geom_line(aes(x = t, y = log(P2)), colour = "pink", size = 1)+ggtitle("log(Pt) graph")
QQ_Plot_fun(total, total$r1)
QQ_Plot_fun(total, total$r2)
acf(total$r1)# 독립이아니다
fit <- lm(r1 ~ t, total); durbinWatsonTest(fit)
acf(total$r2)# 독립이아니다
fit <- lm(r2 ~ t, total); durbinWatsonTest(fit)
learning_data <- filter(total, total$year <2013 )
test_data <- filter(total, total$year >= 2013 )
stat_table <- data.frame( "learn_r1" = c("mean" = mean(learning_data$r1), "var" = var(learning_data$r1)),
"learn_r2" = c("mean" = mean(learning_data$r2), "var" = var(learning_data$r2)),
"test_r1" = c("mean" = mean(test_data$r1), "var" = var(test_data$r1)),
"test_r2" = c("mean" =mean(test_data$r2), "var" = var(test_data$r2)))
cov(learning_data[,c(4,5)])
cov(test_data[,c(4,5)])
stat_table
cov(learning_data[,c(4,5)])
cov(test_data[,c(4,5)])
V0 = 1
Vt_fun = function(data,i, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(rp = th0 * ((1+i)^(1/n)-1) + th1*r1 +th2*r2 )
table$Vt[1] = V0 * (1+table$rp[1])
for(i in 2:n){table$Vt[i] = table$Vt[i-1] * (1+table$rp[i])}
return(data.frame("t" = table$t,"Vt" = table$Vt))
}
P1_0 = test_data$P1[1]; P2_0 = test_data$P2[1]
Vt_star_fun = function(data,i, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(r1_star = (P1-P1_0)/P1_0, r2_star = (P2-P2_0)/P2_0)
for(i in 1:n){table$r0_star[i] = (1+i)^(i/n)-1 }
table = table %>% mutate(Vt_star =V0 *(1 + th0*r0_star + th1*r1_star + th2*r2_star))
return(data.frame("t" = table$t,"Vt_star" = table$Vt_star))
}
learning_data <- filter(total, total$year <2013 )
test_data <- filter(total, total$year >= 2013 )
stat_table <- data.frame( "learn_r1" = c("mean" = mean(learning_data$r1), "var" = var(learning_data$r1)),
"learn_r2" = c("mean" = mean(learning_data$r2), "var" = var(learning_data$r2)),
"test_r1" = c("mean" = mean(test_data$r1), "var" = var(test_data$r1)),
"test_r2" = c("mean" =mean(test_data$r2), "var" = var(test_data$r2)))
stat_table
cov(learning_data[,c(4,5)])
cov(test_data[,c(4,5)])
V0 = 1
Vt_fun = function(data,i, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(rp = th0 * ((1+i)^(1/n)-1) + th1*r1 +th2*r2 )
table$Vt[1] = V0 * (1+table$rp[1])
for(i in 2:n){table$Vt[i] = table$Vt[i-1] * (1+table$rp[i])}
return(data.frame("t" = table$t,"Vt" = table$Vt))
}
P1_0 = test_data$P1[1]; P2_0 = test_data$P2[1]
Vt_star_fun = function(data,i, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(r1_star = (P1-P1_0)/P1_0, r2_star = (P2-P2_0)/P2_0)
for(i in 1:n){table$r0_star[i] = (1+i)^(i/n)-1 }
table = table %>% mutate(Vt_star =V0 *(1 + th0*r0_star + th1*r1_star + th2*r2_star))
return(data.frame("t" = table$t,"Vt_star" = table$Vt_star))
}
Port0 = Vt_fun(test_data, 0.05,1,0,0)
Port1 =Vt_fun(test_data, 0.05,0,1,0)
Port2 =Vt_fun(test_data, 0.05,0,0,1)
Port3 =Vt_fun(test_data, 0.05,1/3,1/3,1/3)
Port4 =Vt_fun(test_data, 0.05,0,1/2,1/2)
Port_star3 = Vt_star_fun(test_data,0.05, 1/3,1/3,1/3)
Port_star4 =Vt_star_fun(test_data, 0.05,0,1/2,1/2)
Vtgraph = data.frame("t" =test_data$t, "Vt0" = Port0[2], "Vt1" = Port1[2],
"Vt2" = Port2[2], "Vt3" = Port3[2], "Vt4" = Port4[2],
"Vt_star3" = Port_star3[2], "Vt_star4" = Port_star4[2])
colnames(Vtgraph) = c("t","Vt0","Vt1","Vt2","Vt3","Vt4","Vt_star3" , "Vt_star4" )
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt0)) + geom_line(aes(x = t, y = Vt1),colour = "pink")+
geom_line(aes(x = t, y = Vt2),colour = "red") +geom_line(aes(x = t, y = Vt3),colour = "blue")
interest = read.csv("C:/Users/jeeyeon/Desktop/data/4.1.2 시장금리(월_분기_년).csv", stringsAsFactors = F)
View(interest)
View(interest)
interest = interest[-1:-3,]
View(interest)
names(interest) = c("date", "interest")
interest = read.csv("C:/Users/jeeyeon/Desktop/data/4.1.2 시장금리(월_분기_년).csv", stringsAsFactors = F)
interest = interest[-1:-3,]; names(interest) = c("date", "interest")
interest = interest %>% transmute(date=as.numeric(gsub("/", "", date)), interest=as.numeric(interest))
View(interest)
interest = read.csv("C:/Users/jeeyeon/Desktop/data/4.1.2 시장금리(월_분기_년).csv", stringsAsFactors = F)
interest = interest[-1:-3,]; names(interest) = c("date", "interest")
interest = interest %>% transmute(date=as.numeric(gsub("/", "", date)), interest=as.numeric(interest))
hd = read.csv("C:/Users/jeeyeon/Desktop/data/hyundai.csv", header = T, stringsAsFactor = F)
hd = hd[,c(1,2,3)];  colnames(hd) = c("date", "hd_lower","hd_upper")
hd = hd %>% transmute(date = date, P1 = (as.numeric(gsub(",", "", hd_lower))+ as.numeric(gsub(",", "", hd_upper)))/2)
kt = read.csv("C:/Users/jeeyeon/Desktop/data/kt.csv", header = T, stringsAsFactor = F)
kt <- kt[,c(1,2,3)]; colnames(kt) = c("date", "kt_lower", "kt_upper")
kt = kt %>% transmute(date = date, P2 = (as.numeric(gsub(",", "", kt_lower))+ as.numeric(gsub(",", "", kt_upper)))/2)
total = hd %>% left_join(kt, by = "date") %>% left_join(interest, by="date") %>%
transmute(date = as.numeric(gsub("/", "", date)), P1 = P1, P2 = P2 )  %>%
mutate(r1 = (P1-lag(P1))/lag(P1), r2 = (P2-lag(P2))/lag(P2), year = substr(date, 1, 4))
View(total)
total = hd %>% left_join(kt, by = "date") %>% left_join(interest, by="date") %>%
transmute(date = as.numeric(gsub("/", "", date)), P1 = P1, P2 = P2,interest = interest )  %>%
mutate(r1 = (P1-lag(P1))/lag(P1), r2 = (P2-lag(P2))/lag(P2), year = substr(date, 1, 4))
total = hd %>% left_join(kt, by = "date") %>% left_join(interest, by="date")
View(total)
View(total)
interest = read.csv("C:/Users/jeeyeon/Desktop/data/4.1.2 시장금리(월_분기_년).csv", stringsAsFactors = F)
interest = interest[-1:-3,]; names(interest) = c("date", "interest")
interest = interest %>% transmute(date=as.numeric(gsub("/", "", date)), interest=as.numeric(interest))
hd = read.csv("C:/Users/jeeyeon/Desktop/data/hyundai.csv", header = T, stringsAsFactor = F)
hd = hd[,c(1,2,3)];  colnames(hd) = c("date", "hd_lower","hd_upper")
hd = hd %>% transmute(date = date, P1 = (as.numeric(gsub(",", "", hd_lower))+ as.numeric(gsub(",", "", hd_upper)))/2)
kt = read.csv("C:/Users/jeeyeon/Desktop/data/kt.csv", header = T, stringsAsFactor = F)
kt <- kt[,c(1,2,3)]; colnames(kt) = c("date", "kt_lower", "kt_upper")
kt = kt %>% transmute(date = date, P2 = (as.numeric(gsub(",", "", kt_lower))+ as.numeric(gsub(",", "", kt_upper)))/2)
total = hd %>% left_join(kt, by = "date") %>% left_join(interest, by="date") %>%
transmute(date = as.numeric(gsub("/", "", date)), P1 = P1, P2 = P2,interest = interest )  %>%
mutate(r1 = (P1-lag(P1))/lag(P1), r2 = (P2-lag(P2))/lag(P2), year = substr(date, 1, 4))
total = hd %>% left_join(kt, by = "date") %>% left_join(interest, by="date")
hd = read.csv("C:/Users/jeeyeon/Desktop/data/hyundai.csv", header = T, stringsAsFactor = F)
hd = hd[,c(1,2,3)];  colnames(hd) = c("date", "hd_lower","hd_upper")
hd = hd %>% transmute(date = date, P1 = (as.numeric(gsub(",", "", hd_lower))+ as.numeric(gsub(",", "", hd_upper)))/2)
interest = read.csv("C:/Users/jeeyeon/Desktop/data/4.1.2 시장금리(월_분기_년).csv", stringsAsFactors = F)
interest = interest[-1:-3,]; names(interest) = c("date", "interest")
interest = interest %>% transmute(date=as.numeric(gsub("/", "", date)), interest=as.numeric(interest))
hd = read.csv("C:/Users/jeeyeon/Desktop/data/hyundai.csv", header = T, stringsAsFactor = F)
hd = hd[,c(1,2,3)];  colnames(hd) = c("date", "hd_lower","hd_upper")
hd = hd %>% transmute(date =as.numeric(gsub("/", "", date)), P1 = (as.numeric(gsub(",", "", hd_lower))+ as.numeric(gsub(",", "", hd_upper)))/2)
kt = read.csv("C:/Users/jeeyeon/Desktop/data/kt.csv", header = T, stringsAsFactor = F)
kt <- kt[,c(1,2,3)]; colnames(kt) = c("date", "kt_lower", "kt_upper")
kt = kt %>% transmute(date = as.numeric(gsub("/", "", date)), P2 = (as.numeric(gsub(",", "", kt_lower))+ as.numeric(gsub(",", "", kt_upper)))/2)
total = hd %>% left_join(kt, by = "date") %>% left_join(interest, by="date") %>%
transmute(date = as.numeric(gsub("/", "", date)), P1 = P1, P2 = P2,interest = interest )  %>%
mutate(r1 = (P1-lag(P1))/lag(P1), r2 = (P2-lag(P2))/lag(P2), year = substr(date, 1, 4))
total <- total[complete.cases(total), ];  n <- length(total$date)
total <- total[c(order(total$date)),]
total <- total %>% mutate(t = c(0:(n-1)))
learning_data <- filter(total, total$year <2013 )
test_data <- filter(total, total$year >= 2013 )
V0 = 1
Vt_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(rp = th0 * ((1+interest)^(1/n)-1) + th1*r1 +th2*r2 )
table$Vt[1] = V0 * (1+table$rp[1])
for(i in 2:n){table$Vt[i] = table$Vt[i-1] * (1+table$rp[i])}
return(data.frame("t" = table$t,"Vt" = table$Vt))
}
Port0 = Vt_fun(test_data,1,0,0)
Port1 =Vt_fun(test_data,0,1,0)
Port2 =Vt_fun(test_data,0,0,1)
Port3 =Vt_fun(test_data,1/3,1/3,1/3)
Port4 =Vt_fun(test_data,0,1/2,1/2)
Port_star3 = Vt_star_fun(test_data,0.05, 1/3,1/3,1/3)
Port_star4 =Vt_star_fun(test_data, 0.05,0,1/2,1/2)
Vtgraph = data.frame("t" =test_data$t, "Vt0" = Port0[2], "Vt1" = Port1[2],
"Vt2" = Port2[2], "Vt3" = Port3[2], "Vt4" = Port4[2],
"Vt_star3" = Port_star3[2], "Vt_star4" = Port_star4[2])
colnames(Vtgraph) = c("t","Vt0","Vt1","Vt2","Vt3","Vt4","Vt_star3" , "Vt_star4" )
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt0)) + geom_line(aes(x = t, y = Vt1),colour = "pink")+
geom_line(aes(x = t, y = Vt2),colour = "red") +geom_line(aes(x = t, y = Vt3),colour = "blue")
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt0)) + geom_line(aes(x = t, y = Vt1),colour = "pink")+
geom_line(aes(x = t, y = Vt2),colour = "red") +geom_line(aes(x = t, y = Vt3),colour = "blue")
View(Vtgraph)
View(Vtgraph)
View(learning_data)
Vt_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(rp = th0 * ((1+interest)^(1/12)-1) + th1*r1 +th2*r2 )
table$Vt[1] = V0 * (1+table$rp[1])
for(i in 2:n){table$Vt[i] = table$Vt[i-1] * (1+table$rp[i])}
return(data.frame("t" = table$t,"Vt" = table$Vt))
}
Port0 = Vt_fun(test_data,1,0,0)
Port1 =Vt_fun(test_data,0,1,0)
Port2 =Vt_fun(test_data,0,0,1)
Port3 =Vt_fun(test_data,1/3,1/3,1/3)
Port4 =Vt_fun(test_data,0,1/2,1/2)
Port_star3 = Vt_star_fun(test_data,0.05, 1/3,1/3,1/3)
Port_star4 =Vt_star_fun(test_data, 0.05,0,1/2,1/2)
Vtgraph = data.frame("t" =test_data$t, "Vt0" = Port0[2], "Vt1" = Port1[2],
"Vt2" = Port2[2], "Vt3" = Port3[2], "Vt4" = Port4[2],
"Vt_star3" = Port_star3[2], "Vt_star4" = Port_star4[2])
colnames(Vtgraph) = c("t","Vt0","Vt1","Vt2","Vt3","Vt4","Vt_star3" , "Vt_star4" )
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt0)) + geom_line(aes(x = t, y = Vt1),colour = "pink")+
geom_line(aes(x = t, y = Vt2),colour = "red") +geom_line(aes(x = t, y = Vt3),colour = "blue")
Vt_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(rp = th0 * ((1+interest)^(1/n)-1) + th1*r1 +th2*r2 )
table$Vt[1] = V0 * (1+table$rp[1])
for(i in 2:n){table$Vt[i] = table$Vt[i-1] * (1+table$rp[i])}
return(data.frame("t" = table$t,"Vt" = table$Vt))
}
Vt_star_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(r1_star = (P1-P1_0)/P1_0, r2_star = (P2-P2_0)/P2_0)
for(i in 1:n){table$r0_star[i] = (1+interest)^(i/n)-1 }
table = table %>% mutate(Vt_star =V0 *(1 + th0*r0_star + th1*r1_star + th2*r2_star))
return(data.frame("t" = table$t,"Vt_star" = table$Vt_star))
}
Port0 = Vt_fun(test_data,1,0,0)
Port1 =Vt_fun(test_data,0,1,0)
Port2 =Vt_fun(test_data,0,0,1)
Port3 =Vt_fun(test_data,1/3,1/3,1/3)
Port4 =Vt_fun(test_data,0,1/2,1/2)
Port_star3 = Vt_star_fun(test_data,0.05, 1/3,1/3,1/3)
Port_star4 =Vt_star_fun(test_data, 0.05,0,1/2,1/2)
Port_star3 = Vt_star_fun(test_data,1/3,1/3,1/3)
Port_star4 =Vt_star_fun(test_data,0,1/2,1/2)
Vtgraph = data.frame("t" =test_data$t, "Vt0" = Port0[2], "Vt1" = Port1[2],
"Vt2" = Port2[2], "Vt3" = Port3[2], "Vt4" = Port4[2],
"Vt_star3" = Port_star3[2], "Vt_star4" = Port_star4[2])
Port_star3 = Vt_star_fun(test_data,1/3,1/3,1/3)
test_data$P1[1]
P1_0 = test_data$P1[1]; P2_0 = test_data$P2[1]
Vt_star_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(r1_star = (P1-P1_0)/P1_0, r2_star = (P2-P2_0)/P2_0)
for(i in 1:n){table$r0_star[i] = (1+interest)^(i/n)-1 }
table = table %>% mutate(Vt_star =V0 *(1 + th0*r0_star + th1*r1_star + th2*r2_star))
return(data.frame("t" = table$t,"Vt_star" = table$Vt_star))
}
Port_star3 = Vt_star_fun(test_data,1/3,1/3,1/3)
View(Port_star3)
View(test_data)
Vt_star_fun(test_data,1/3,1/3,1/3)
Vt_star_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(r1_star = (P1-P1_0)/P1_0, r2_star = (P2-P2_0)/P2_0)
for(i in 1:n){table$r0_star[i] = (1+interest)^(i/n)-1 }
table = table %>% mutate(Vt_star =V0 *(1 + th0*r0_star + th1*r1_star + th2*r2_star))
return(data.frame("t" = table$t,"Vt_star" = table$Vt_star))
}
Vt_star_fun(test_data,1/3,1/3,1/3)
Vt_star_fun = function(data, th0,th1,th2){
n = length(data$date)
table = data %>% mutate(r1_star = (P1-P1_0)/P1_0, r2_star = (P2-P2_0)/P2_0)
for(i in 1:n){table$r0_star[i] = (1+table$interest)^(i/n)-1 }
table = table %>% mutate(Vt_star =V0 *(1 + th0*r0_star + th1*r1_star + th2*r2_star))
return(data.frame("t" = table$t,"Vt_star" = table$Vt_star))
}
Port_star3 = Vt_star_fun(test_data,1/3,1/3,1/3)
Port_star3
Port_star4 =Vt_star_fun(test_data,0,1/2,1/2)
Vtgraph = data.frame("t" =test_data$t, "Vt0" = Port0[2], "Vt1" = Port1[2],
"Vt2" = Port2[2], "Vt3" = Port3[2], "Vt4" = Port4[2],
"Vt_star3" = Port_star3[2], "Vt_star4" = Port_star4[2])
colnames(Vtgraph) = c("t","Vt0","Vt1","Vt2","Vt3","Vt4","Vt_star3" , "Vt_star4" )
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt0)) + geom_line(aes(x = t, y = Vt1),colour = "pink")+
geom_line(aes(x = t, y = Vt2),colour = "red") +geom_line(aes(x = t, y = Vt3),colour = "blue")
# P3
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt3))+ geom_line(aes(x = t, y = Vt_star3), colour="red")
# P4
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt4))+ geom_line(aes(x = t, y = Vt_star4), colour="red")
# P3
ggplot(Vtgraph) + geom_line(aes(x = t, y = Vt3))+ geom_line(aes(x = t, y = Vt_star3), colour="red")
### 과제 solution !
dog = read.csv("C:/Users/jeeyeon/Desktop/data/sleeping-dog.csv")
View(dog)
library(tidyr);library(dplyr);library(nlme);library(car);library(MASS); library(ggplot2)
library(tidyr);library(dplyr);library(nlme);library(car);library(MASS); library(ggplot2)
library(dplyr)
### 과제 solution !
dog = read.csv("C:/Users/jeeyeon/Desktop/data/sleeping-dog.csv")
C1 = dog$TRT3 + dog$TRT4 - dog$TRT1 - dog$TRT2
C2 = dog$TRT1 + dog$TRT3 - dog$TRT2 - dog$TRT4
C3 = dog$TRT1 + dog$TRT4 - dog$TRT2 - dog$TRT3
View(dog)
library(ICSNP)
install.packages("ICSNP")
library(ICSNP)
C1 = dog$TRT3 + dog$TRT4 - dog$TRT1 - dog$TRT2
C2 = dog$TRT1 + dog$TRT3 - dog$TRT2 - dog$TRT4
C3 = dog$TRT1 + dog$TRT4 - dog$TRT2 - dog$TRT3
C.total = data.frame(C1 = C1, C2 = C2, C3 = C3)
View(C.total)
HotellingsT2(C.total)
t.test(C1)  # H effect
t.test(C2)  # CO2 effect
t.test(C3)  # H*CO2 effect
library(car)
dog.lm = lm( cbind(HO,LO,HI,LI) ~ . ,data = dog )
dog.lm = lm( cbind(TRT1,TRT2,TRT3,TRT4) ~ . ,data = dog )
dog.lm = lm( cbind(TRT1,TRT2,TRT3,TRT4) ~ . ,data = dog )
trt.data = data.frame( H = c("Out", "Out", "In", "In"),
CO2 = c("H", "L", "H", "L"))
View(trt.data)
dog.lm = lm( cbind(TRT1,TRT2,TRT3,TRT4) ~ . ,data = dog )
trt.data = data.frame( H = c("Out", "Out", "In", "In"),
CO2 = c("H", "L", "H", "L"))
summary(Anova(dog.lm, idata = trt.data, idesign = ~ H + CO2 + H*CO2 ))
