devtools::install_github("AckerDWM/gg3D")
library("gg3D")
library(ggplot2)
library(plotly)
install.packages("webshot")
webshot::install_phantomjs()
library(ISLR)
names(Smarket)
dim(Smarket)
summary(Smarket)
cor(Smarket)
names(Smarket)
dim(Smarket)
summary(Smarket)
cor(Smarket) # error! 'x' must be numeric
names(Smarket)
dim(Smarket)
summary(Smarket)
# cor(Smarket) # error! 'x' must be numeric
cor(select_if(Smarket, is.numeric))
library(ISLR)
library(tidyverse)
names(Smarket)
dim(Smarket)
summary(Smarket)
# cor(Smarket) # error! 'x' must be numeric
cor(select_if(Smarket, is.numeric))
names(Smarket)
dim(Smarket)
summary(Smarket)
# cor(Smarket) # error! 'x' must be numeric
cor(select_if(Smarket, is.numeric))
attach(Smarket)
plot(Volume)
detach(Smarket)
ggplot(Smarket) + geom_point(Volume)
plot(Smarket$Volume)
plot(Volume)
plot(Volume)
names(Smarket)
dim(Smarket)
summary(Smarket)
# cor(Smarket) # error! 'x' must be numeric
cor(select_if(Smarket, is.numeric))
attach(Smarket)
plot(Volume)
glm.fit = glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = Smarket, family = binomial)
summary(glm.fit)
coef(glm.fit)
summary(glm.fit)$coef
glm.fit = glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = Smarket, family = binomial)
summary(glm.fit)
coef(glm.fit)
summary(glm.fit)$coef
glm.probs = predict(glm.fit, type = "response")
glm.probs[1:10]
contrasts(Direction)
glm.pred = rep("Down", 1250)
glm.pred[glm.probs >.5] = "Up"
glm.pred
table(glm.pred, Direction)
